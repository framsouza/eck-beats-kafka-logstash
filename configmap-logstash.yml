apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-multiple-pipeline
data:
  logstash.yml: |-
    http.host: "0.0.0.0"
  pipelines.yml: |-
    - pipeline.id: app1
      path.config: "/usr/share/logstash/pipeline/app1.config"
    - pipeline.id: app2
      path.config: "/usr/share/logstash/pipeline/app2.config"
  app1.config: |-
    input {
      kafka {
        client_id => "app1"
        codec => json
        decorate_events => basic
        consumer_threads => 10
        bootstrap_servers => "kafka-cluster-kafka-brokers:9092"
        topics => ["app1"]
      }
    }

    filter {
      mutate{
        add_field => { "[topic]" => "%{[@metadata][kafka][topic]}"}
        add_field => { "[consumer_group]" => "%{[@metadata][kafka][consumer_group]}"}
        add_field => { "[partition]" => "%{[@metadata][kafka][partition]"}
        add_field => { "[offset]" => "%{[@metadata][kafka][offset]}"}
      }
    }

    output {
      elasticsearch {
        hosts => [ "${ES_HOSTS}" ]
        user => "${ES_USER}"
        password => "${ES_PASSWORD}"
        cacert => '/etc/logstash/certificates/ca.crt'
        index => "app1"
      }
    }

  app2.config: |-
    input {
      kafka {
        client_id => "app2"
        codec => json
        decorate_events => basic
        consumer_threads => 10
        bootstrap_servers => "kafka-cluster-kafka-brokers:9092"
        topics => ["app2"]
      }
    }

    filter {
      mutate{
        add_field => { "[topic]" => "%{[@metadata][kafka][topic]}"}
        add_field => { "[consumer_group]" => "%{[@metadata][kafka][consumer_group]}"}
        add_field => { "[partition]" => "%{[@metadata][kafka][partition]"}
        add_field => { "[offset]" => "%{[@metadata][kafka][offset]}"}
      }
    }

    output {
      elasticsearch {
        hosts => [ "${ES_HOSTS}" ]
        user => "${ES_USER}"
        password => "${ES_PASSWORD}"
        cacert => '/etc/logstash/certificates/ca.crt'
        index => "app2"
      }
    }
